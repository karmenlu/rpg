{"version":3,"sources":["components/Sprite.jsx","components/Actor.jsx","hooks/use-walk.js","components/Player.jsx","hooks/use-key-press.js","components/AI.jsx","components/Arena.jsx","App.jsx","index.js"],"names":["Sprite","image","data","position","y","x","h","w","style","top","left","height","width","backgroundImage","backgroundRepeat","backgroundPosition","Actor","sprite","step","dir","useWalk","maxSteps","arenaWidth","arenaHeight","useState","setPosition","setDir","setStep","directions","down","right","up","modifier","stayOnGrid","coordinate","gridMax","walk","prev","move","Player","fn","skin","e","keyPress","key","startsWith","replace","toLowerCase","preventDefault","useEffect","window","addEventListener","removeEventListener","process","AI","interval","setInterval","randomDir","Math","floor","random","clearInterval","Arena","color","protags","antags","marginLeft","marginRight","backgroundColor","map","proSkin","anSkin","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0be7013.chunk.js","sourcesContent":["import React from 'react'\nexport default function Sprite({image, data, position}) {\n    const { y, x, h, w } = data;\n    return (<div\n        style={{\n            position: \"absolute\",\n            top: position.y, \n            left: position.x,\n            height: `${h}px`,\n            width: `${w}px`,\n            backgroundImage: `${image}`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundPosition: `-${x}px -${y}px`\n        }}\n    />)\n}","import React from 'react'\nimport Sprite from './Sprite'\n\nexport default function Actor(\n    {\n        sprite,\n        data,\n        position = {x: 0, y: 0},\n        step = 0,\n        dir = 0\n    }) {\n    const {h, w} = data\n    return (\n        <Sprite\n            image={sprite}\n            position={position}\n            data={{\n                x: step * w,\n                y: dir * h,\n                w,\n                h\n            }}\n        />\n    )\n}","import { useState } from 'react'\n\nexport default function useWalk(maxSteps, arenaWidth, arenaHeight) {\n    const [position, setPosition] = useState({x:0, y:0})\n    const [dir, setDir] = useState(0)\n    const [step, setStep] = useState(0)\n    const directions = {\n        down: 0, left: 1, right: 2, up: 3\n    }\n    const stepSize = 16;\n    const modifier = {\n        down: { x: 0, y: stepSize }, \n        left: { x: -stepSize, y: 0 },\n        right: { x: stepSize, y: 0 },\n        up: { x: 0, y: -stepSize }\n    }\n    \n    function stayOnGrid(coordinate, gridMax) {\n        if(coordinate <= 0) {\n            return 0;\n        } else if (coordinate >= gridMax) {\n            return gridMax;\n        } else {\n            return coordinate;\n        }\n    }\n    \n    function walk(dir) {\n        setDir(prev => {\n            if(directions[dir] === prev) move(dir);\n            return directions[dir]\n        })\n        setStep(prev => prev < maxSteps - 1 ? prev + 1: 0)\n    } \n    \n    function move(dir) {\n        setPosition(prev => ({\n            x: stayOnGrid(prev.x + modifier[dir].x, arenaWidth - 32),\n            y: stayOnGrid(prev.y + modifier[dir].y, arenaHeight - 32)\n        }))\n    }\n    \n    return {\n        walk, dir, step, position\n    }\n}","import React from 'react'\nimport Actor from './Actor'\nimport useKeyPress from '../hooks/use-key-press'\nimport useWalk from '../hooks/use-walk'\n\nexport default function Player({skin, arenaWidth, arenaHeight}) {\n    const { dir, step, walk, position } = useWalk(3, arenaWidth, arenaHeight)\n    const data = {\n        h: 32, w: 32\n    }\n    \n    useKeyPress((e) => {\n        const keyPress = e.key\n        if(keyPress.startsWith(\"Arrow\")) {\n            walk(keyPress.replace(\"Arrow\", \"\").toLowerCase())\n            e.preventDefault()\n        }\n    })\n    \n    return (\n        <Actor\n            sprite={`url(${process.env.PUBLIC_URL + '/' + skin})`}\n            data={data}\n            step={step}\n            dir={dir}\n            position={position}\n        />\n    )\n}","import { useEffect } from 'react'\n\nexport default function  useKeyPress(fn) {\n    useEffect(() => {\n        window.addEventListener(\"keydown\", fn)\n        return () => window.removeEventListener(\"keydown\", fn);\n    }, [fn]);\n}","import React, {useEffect} from 'react'\nimport Actor from './Actor'\nimport useWalk from '../hooks/use-walk'\n\nexport default function AI({skin, arenaWidth, arenaHeight}) {\n    const { dir, step, walk, position } = useWalk(3, arenaWidth, arenaHeight)\n    const data = {\n        h: 32, w: 32\n    }\n    \n    useEffect(() => {\n        const interval = setInterval(() => {\n            let randomDir = Math.floor(Math.random() * 4) + 0\n            let directions = ['left', 'up', 'down', 'right'];\n            walk(directions[randomDir])\n        }, 500);\n\n        return () => clearInterval(interval);\n    }, [walk]);\n    \n    return (\n        <Actor\n            sprite={`url(${process.env.PUBLIC_URL + '/' + skin})`}\n            data={data}\n            step={step}\n            dir={dir}\n            position={position}\n        />\n    )\n}","import React from 'react'\nimport Player from \"./Player\";\nimport AI from \"./AI\";\nexport default function Arena({color, arenaWidth, arenaHeight, protags, antags}) {\n    \n    return (\n        <div\n             style={{\n                 marginLeft: 'auto',\n                 marginRight: 'auto',\n                 position: 'relative',\n                 backgroundColor: `${color}`,\n                 width: `${arenaWidth}px`,\n                 height: `${arenaHeight}px`\n             }}\n        >\n            {protags.map((proSkin) => { return <Player skin={proSkin} arenaWidth={arenaWidth} arenaHeight={arenaHeight}/>})}\n            {antags.map((anSkin) => { return <AI skin={anSkin} arenaWidth={arenaWidth} arenaHeight={arenaHeight}/>})}\n        </div>\n    )\n}","import React from 'react'\nimport Player from './components/Player'\nimport Arena from './components/Arena'\nimport './index.css'\n\nexport default function App() {\n    const arenaColor = \"green\"\n    const arenaWidth = 320\n    const arenaHeight = 568\n    const protags = [\"f1.png\"]\n    const antags = [\"e1.png\"]\n    \n    return (\n        <Arena color={arenaColor} arenaWidth={arenaWidth} arenaHeight={arenaHeight} protags={protags} antags={antags}/>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}